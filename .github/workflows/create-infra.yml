name: create-infra
on: 
    push:
        branches:
            - main
            - dev
    workflow_dispatch:
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: "us-east-1"
    CACHE_FOLDER: cache_data
run-name: creating aws infra
jobs:
    create-key-pair:
        env:
            JOB_FOLDER: create-keys/  
        outputs:
            key_pair_name: ${{ steps.publish-key-pair-name.outputs.key_pair_name }}
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v4
            - name: Install terraform
              uses: hashicorp/setup-terraform@v3
            - name: initialize terraform
              run: terraform -chdir=${{ env.JOB_FOLDER }} init
            - name: create infra
              run: terraform -chdir=${{ env.JOB_FOLDER }} apply -auto-approve
            - name: Prepare cache folder
              run: |
                mkdir -p ${{ env.CACHE_FOLDER }}/create_keys_cache
                cp "${{ env.JOB_FOLDER }}terraform.tfstate" "${{ env.JOB_FOLDER }}$(terraform -chdir=${{ env.JOB_FOLDER }} output -raw key_pair_output)" ${{ env.CACHE_FOLDER }}/create_keys_cache/
            - name: cache data
              uses: actions/cache@v4
              with:
                path: "${{ env.CACHE_FOLDER }}/create_keys_cache"
                key: "ec2-key-setup-test-job1-${{ github.run_number }}"
            - name: output key_pair_name
              id: publish-key-pair-name
              run: echo "key_pair_name=$(terraform -chdir=${{ env.JOB_FOLDER }} output -raw key_pair_name)" >> $GITHUB_OUTPUT
    create-security-group:
        runs-on: ubuntu-latest
        env:
            JOB_FOLDER: create-sg
        outputs:
            sg_ids: ${{ steps.publish-sg-id.outputs.sg_grp_ids }}
        steps:
          - name: Get code
            uses: actions/checkout@v4
          - name: Install terraform
            uses: hashicorp/setup-terraform@v3
          - name: Initialize terraform
            run: terraform -chdir=${{ env.JOB_FOLDER }} init
          - name: create infra
            run: terraform -chdir=${{ env.JOB_FOLDER }} apply -auto-approve
          - name: Prepare cache folder
            run: |
              mkdir -p ${{ env.CACHE_FOLDER }}/create_sg
              cp "${{ env.JOB_FOLDER }}/terraform.tfstate" ${{ env.CACHE_FOLDER }}/create_sg/
          - name: cache data
            uses: actions/cache@v4
            with:
              path: "${{ env.CACHE_FOLDER }}/create_sg"
              key: "ec2-key-setup-test-job2-${{ github.run_number }}"
          - name: output sg ids
            id: publish-sg-id
            run: |
             echo "sg_grp_ids=$(terraform -chdir=${{env.JOB_FOLDER}} output -json aws_security_group_ids | jq -c '.')"
             echo "sg_grp_ids=$(terraform -chdir=${{env.JOB_FOLDER}} output -json aws_security_group_ids)" >> $GITHUB_OUTPUT
    destroy-infra:
        runs-on: ubuntu-latest
        needs: 
          - create-key-pair
          - create-security-group
        env:
            JOB_FOLDER: create-infra/
        steps:
            - name: Install terraform
              uses: hashicorp/setup-terraform@v3
            - name: load cache job1
              uses: actions/cache@v4
              with:
                path: "${{ env.CACHE_FOLDER }}/create_keys_cache"
                key: "ec2-key-setup-test-job1-${{ github.run_number }}"
            - name: check
              run: ls -lrt ${{ env.CACHE_FOLDER }}/create_keys_cache
            - name: load cache job2
              uses: actions/cache@v4
              with:
                path: "${{ env.CACHE_FOLDER }}/create_sg"
                key: "ec2-key-setup-test-job2-${{ github.run_number }}"
            - name: check
              run: ls -lrt ${{ env.CACHE_FOLDER }}/create_sg
            - name: Initialize terraform
              run: |
                terraform -chdir=${{ env.CACHE_FOLDER }}/create_keys_cache init
                terraform -chdir=${{ env.CACHE_FOLDER }}/create_sg init
            - name: Destroy infra
              run: |
                terraform -chdir=${{ env.CACHE_FOLDER }}/create_keys_cache destroy -auto-approve
                terraform -chdir=${{ env.CACHE_FOLDER }}/create_sg destroy -auto-approve 
